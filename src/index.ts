/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface SolidityAST {
  ElementaryTypeName: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    ElementaryTypeNameExpression: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  Assignment: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  BinaryOperation: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  Conditional: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ElementaryTypeNameExpression: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  FunctionCall: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  FunctionCallOptions: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  Identifier: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ImportDirective: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  IndexAccess: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  Literal: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  MemberAccess: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  NewExpression: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ArrayTypeName: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  FunctionTypeName: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ParameterList: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  VariableDeclaration: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  StructuredDocumentation: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  OverrideSpecifier: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  UserDefinedTypeName: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    OverrideSpecifier: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  IdentifierPath: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    UserDefinedTypeName: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    OverrideSpecifier: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  Mapping: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  TupleExpression: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  UnaryOperation: {
    Assignment: {
      [k: string]: unknown;
    }[];
    BinaryOperation: {
      [k: string]: unknown;
    }[];
    Conditional: {
      [k: string]: unknown;
    }[];
    IndexAccess: {
      [k: string]: unknown;
    }[];
    FunctionCall: {
      [k: string]: unknown;
    }[];
    FunctionCallOptions: {
      [k: string]: unknown;
    }[];
    MemberAccess: {
      [k: string]: unknown;
    }[];
    NewExpression: {
      [k: string]: unknown;
    }[];
    TupleExpression: {
      [k: string]: unknown;
    }[];
    UnaryOperation: {
      [k: string]: unknown;
    }[];
    FunctionTypeName: {
      [k: string]: unknown;
    }[];
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    EmitStatement: {
      [k: string]: unknown;
    }[];
    ExpressionStatement: {
      [k: string]: unknown;
    }[];
    VariableDeclarationStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    InheritanceSpecifier: {
      [k: string]: unknown;
    }[];
    ModifierInvocation: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    EventDefinition: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ParameterList: {
      [k: string]: unknown;
    }[];
    ArrayTypeName: {
      [k: string]: unknown;
    }[];
    Mapping: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    Return: {
      [k: string]: unknown;
    }[];
    StructDefinition: {
      [k: string]: unknown;
    }[];
    UsingForDirective: {
      [k: string]: unknown;
    }[];
    VariableDeclaration: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ForStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  Block: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  EmitStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ExpressionStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  VariableDeclarationStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  IfStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  WhileStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  TryStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  TryCatchClause: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  InlineAssembly: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  PlaceholderStatement: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  Return: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  UncheckedBlock: {
    ForStatement: {
      [k: string]: unknown;
    }[];
    IfStatement: {
      [k: string]: unknown;
    }[];
    WhileStatement: {
      [k: string]: unknown;
    }[];
    TryStatement: {
      [k: string]: unknown;
    }[];
    TryCatchClause: {
      [k: string]: unknown;
    }[];
    Block: {
      [k: string]: unknown;
    }[];
    UncheckedBlock: {
      [k: string]: unknown;
    }[];
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ModifierDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  InheritanceSpecifier: {
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ModifierInvocation: {
    FunctionDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  EnumValue: {
    EnumDefinition: {
      [k: string]: unknown;
    }[];
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  EnumDefinition: {
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  EventDefinition: {
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  FunctionDefinition: {
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ModifierDefinition: {
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ImportDirective: {
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  PragmaDirective: {
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ContractDefinition: {
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  StructDefinition: {
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  UsingForDirective: {
    ContractDefinition: {
      [k: string]: unknown;
    }[];
    SourceUnit: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  SourceUnit: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
